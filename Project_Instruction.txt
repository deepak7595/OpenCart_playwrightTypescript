For Project set up, refer the document. 
npm install @faker-js/faker ----> The package is to generate random testData. 
All the added dependencies will be available in "Package.json" file.
"test.config.ts" -> where we maintain all the urls and other reusable contents. {Global Test Data}


Scripts in Package.Json is completely customizable. 
we can create what combination we want. 

To run the script, npm playwright test "keywordfromScripts"



----- GIT -----

check document:

Follow the document, if the project is new...  1st approach.

for the first time, we create repository
1) git init --> we will be able to see "u" next to the file name.. which represent untracked files. 
2) git config --global user.name "deepak"   
3) git config --global user.email "johndeepak444@gmail.com"
4) git status -> show the files are in untracked
5) git add -A -> All files {or} git add filename -> if we plan to commit for single file. {or} git add *.ts --> means whatever file which has the extension as .ts. will be moved
    {or} git add folderName --> means all file within the folder {or} git add . --> all files
we will be able to see, "u" becomes "A" now. --> Means all the files are in Indexing or Staging. {in command we have see some warning that can be ignored}
6) git commit -m "commit message"  --> to commit the files into local repository{working space to local repository}
    Now "A" becomes None.. Means all the files are committed in local repository
7) git status ---> Nothing to commit, if no items is pending
8) Pushing the code local to remote reporistory.
	Create new repo in GitHub. use the url

https://github.com/deepak7595/OpenCart_playwrightTypescript.git  --> this url helps to connect local to remote

This process also one time.. Once connection made. we wont use this.. 
9) git push origin master  --> master is a branch. we will the code to master 

it may ask to do signin... we have to provide username and password. {sometimes}

Now if we go and check the repository.. all the pushes will be available in the repository in master branch. since we pushed into master. 


NOW Reverse process: 
--------------------

if any file or folder is present in Remote reporistory, which is not present in local reporistory.
we have to get the file/folder from remote reporistory {clone} 

Added one sample file in remote..Now we need to get the file in local reporistory

we have to type 
--> git fetch origin master  --> will fetch the file, which is present in remote reporistory and not present in local reporistory.
        but if the file is present in both place, content is differ. then we have to go for git pull origin master. bcz fetch only checks the file name, not the contents.
--> git pull origin master  --> it will pull all the file from remote to local reporistory


Better to use "git pull origin master" --> it will handle the above two scenario'sample




2) if we work in existing project, then we have to clone the master --- 2nd approach

create one empty folder and go inside it. Open terminal and execute below line.
git clone "https://github.com/pavanoltraining/myproject.git"

Now we have the code in our local repository.. We have to open the folder in Playwright.

Option 1: Separate commands
git branch <branch name> // creates a new branch
git checkout <branch name> // switch to branch

Option 2: Single command
git checkout -b <branch-name>

Use Option 2: that will create the branch and switch to the created branch in single command.
navigate to the folder, where we clone the repository.. 

go inside the folder by using "cd foldername"

git checkout -b mybranch  -- execute the command. {Make sure, we execute the command, when we swicthed to the actual folder}.
we will get switched to new branch branchname


git branch --show-current  --> this will show where we pointing out

Once changes are done in files and added new files in local repository, then 
git add .

git status

git commit -m "new changes"  --> Now all the changes are in local repository  {newly created  branch not in master} from workspace.

git push origin mybranch  --> created branchname

Now go to github, where we can the see the created branch along with pull requests..  "Compare and pull request"

we have to push our code from our own branch to Master branch. {make sure main branch is selected state}
To do that, click "Compare and pull request" in Git hub. That will take us to the next screen

Base: MAster <-- compare: mybranch

Fill Add Title, and Description -> Click "Create pull request"  --> This will create the pull request.

Then code will be reviewed by teammate. and then if all good, they will suggets to merge code..
Then we directly hit "Merge pull request" button. if any comments given that we heed to solve and raise pull request again.

hit "confirm merge" then we can see the code updated in Main/master branch. ...

the Above process will be for first time.. 
if we make changes again in local repository and try to merge it in main branch... we wont able to see the ""Compare and pull request"" this option in git repository.
do chnage in local repo 
git add .

git status

git commit -m "second chnages"

git push origin mybranch

we can able to see the chnages in our mybranch, but that chnages are not present in main/master 

select our mybranch  -> go to "Pull request"

click "New pull request"

once we select, that will show base and Compare

Option should be,

Base: MAster <-- compare: mybranch



Click "create pull request"

Provide Description -> Click create pull request

if any changes peer will provide comment. if all good, they will click "Merge pull request"

click "Confirm merge".

Now we able to see the changes are updated in main/master branch




CI/CD Integration procedure: 
-----------------------------















