For Project set up, refer the document. 
npm install @faker-js/faker ----> The package is to generate random testData. 
All the added dependencies will be available in "Package.json" file.
"test.config.ts" -> where we maintain all the urls and other reusable contents. {Global Test Data}


Scripts in Package.Json is completely customizable. 
we can create what combination we want. 

To run the script, npm playwright test "keywordfromScripts"



----- GIT -----

check document:

Follow the document, if the project is new...  1st approach.

for the first time, we create repository
1) git init --> we will be able to see "u" next to the file name.. which represent untracked files. 
2) git config --global user.name "deepak"   
3) git config --global user.email "johndeepak444@gmail.com"
4) git status -> show the files are in untracked
5) git add -A -> All files {or} git add filename -> if we plan to commit for single file. {or} git add *.ts --> means whatever file which has the extension as .ts. will be moved
    {or} git add folderName --> means all file within the folder {or} git add . --> all files
we will be able to see, "u" becomes "A" now. --> Means all the files are in Indexing or Staging. {in command we have see some warning that can be ignored}
6) git commit -m "commit message"  --> to commit the files into local repository{working space to local repository}
    Now "A" becomes None.. Means all the files are committed in local repository
7) git status ---> Nothing to commit, if no items is pending
8) Pushing the code local to remote reporistory.
	Create new repo in GitHub. use the url

https://github.com/deepak7595/OpenCart_playwrightTypescript.git  --> this url helps to connect local to remote

This process also one time.. Once connection made. we wont use this.. 
9) git push origin master  --> master is a branch. we will the code to master 

it may ask to do signin... we have to provide username and password. {sometimes}

Now if we go and check the repository.. all the pushes will be available in the repository in master branch. since we pushed into master. 


NOW Reverse process: 
--------------------

if any file or folder is present in Remote reporistory, which is not present in local reporistory.
we have to get the file/folder from remote reporistory {clone} 

Added one sample file in remote..Now we need to get the file in local reporistory

we have to type 
--> git fetch origin master  --> will fetch the file, which is present in remote reporistory and not present in local reporistory.
        but if the file is present in both place, content is differ. then we have to go for git pull origin master. bcz fetch only checks the file name, not the contents.
--> git pull origin master  --> it will pull all the file from remote to local reporistory


Better to use "git pull origin master" --> it will handle the above two scenario'sample









if we work in existing project, then we have to clone the master --- 2nd approach




